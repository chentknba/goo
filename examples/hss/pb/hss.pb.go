// Code generated by protoc-gen-go.
// source: pb/hss.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	pb/hss.proto

It has these top-level messages:
	Request
	Response
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Response struct {
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "pb.Request")
	proto.RegisterType((*Response)(nil), "pb.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Hss service

type HssClient interface {
	Serve(ctx context.Context, opts ...grpc.CallOption) (Hss_ServeClient, error)
}

type hssClient struct {
	cc *grpc.ClientConn
}

func NewHssClient(cc *grpc.ClientConn) HssClient {
	return &hssClient{cc}
}

func (c *hssClient) Serve(ctx context.Context, opts ...grpc.CallOption) (Hss_ServeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Hss_serviceDesc.Streams[0], c.cc, "/pb.Hss/Serve", opts...)
	if err != nil {
		return nil, err
	}
	x := &hssServeClient{stream}
	return x, nil
}

type Hss_ServeClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type hssServeClient struct {
	grpc.ClientStream
}

func (x *hssServeClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hssServeClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Hss service

type HssServer interface {
	Serve(Hss_ServeServer) error
}

func RegisterHssServer(s *grpc.Server, srv HssServer) {
	s.RegisterService(&_Hss_serviceDesc, srv)
}

func _Hss_Serve_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HssServer).Serve(&hssServeServer{stream})
}

type Hss_ServeServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type hssServeServer struct {
	grpc.ServerStream
}

func (x *hssServeServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hssServeServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Hss_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Hss",
	HandlerType: (*HssServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Serve",
			Handler:       _Hss_Serve_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pb/hss.proto",
}

func init() { proto.RegisterFile("pb/hss.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x48, 0xd2, 0xcf,
	0x28, 0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x52, 0xe6, 0x62,
	0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe0, 0x62, 0x2f, 0x48, 0xac, 0xcc, 0xc9,
	0x4f, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x82, 0x71, 0x95, 0x54, 0xb8, 0x38, 0x82,
	0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x91, 0x55, 0x31, 0xa1, 0xa8, 0x32, 0xd2, 0xe7, 0x62,
	0xf6, 0x28, 0x2e, 0x16, 0xd2, 0xe0, 0x62, 0x0d, 0x4e, 0x2d, 0x2a, 0x4b, 0x15, 0xe2, 0xd6, 0x2b,
	0x48, 0xd2, 0x83, 0x1a, 0x2e, 0xc5, 0x03, 0xe1, 0x40, 0x0c, 0x51, 0x62, 0xd0, 0x60, 0x34, 0x60,
	0x4c, 0x62, 0x03, 0x3b, 0xc3, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x31, 0x16, 0xda, 0x96,
	0x00, 0x00, 0x00,
}
